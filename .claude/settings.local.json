{
  "permissions": {
    "allow": [
      "Bash(chmod:*)",
      "Bash(pnpm install:*)",
      "Bash(pnpm db:generate:*)",
      "Bash(pnpm db:push:*)",
      "Bash(pnpm dev:*)",
      "Bash(pnpm add:*)",
      "Bash(pkill:*)",
      "Bash(bash scripts/check-requirements.sh:*)",
      "Bash(timeout 15 bash scripts/dev.sh:*)",
      "Bash(timeout 15 pnpm dev:*)",
      "Bash(pnpm build:*)",
      "Bash(pnpm next build:*)",
      "Bash(pnpm dlx:*)",
      "Bash(SKIP_ENV_VALIDATION=true NEXT_PUBLIC_IGNORE_ESLINT=true pnpm next build:*)",
      "Bash(./scripts/replace-console-logs.sh:*)",
      "Bash(pnpm prisma format:*)",
      "Bash(npx tsc:*)",
      "Bash(find:*)",
      "Bash(./scripts/fix-field-names.sh)",
      "Bash(SKIP_DB_MIGRATIONS=1 pnpm build:*)",
      "Bash(SKIP_DB_MIGRATIONS=1 pnpm db:generate:*)",
      "Bash(for file in src/app/demo/auto-login/page.tsx src/app/metrics/page.tsx src/components/calendar/reschedule-modal.tsx src/components/calendar/weekly-dnd-calendar.tsx src/components/providers/pwa-provider.tsx)",
      "Bash(do)",
      "Bash(echo:*)",
      "Bash(done)",
      "Bash(pnpm test:*)",
      "Bash(cat:*)",
      "Bash(for var in DATABASE_URL DIRECT_URL NEXTAUTH_SECRET NEXTAUTH_URL NEXT_PUBLIC_SUPABASE_URL NEXT_PUBLIC_SUPABASE_ANON_KEY SUPABASE_SERVICE_ROLE_KEY UPSTASH_REDIS_REST_URL UPSTASH_REDIS_REST_TOKEN)",
      "Bash(do if grep -q \"^$var=\" .env)",
      "Bash(then echo \"✓ $var\")",
      "Bash(else echo \"✗ $var (FALTA)\")",
      "Bash(fi)",
      "Bash(if grep -q \"^DATABASE_URL=\" .env)",
      "Bash(then echo \"✓ DATABASE_URL configurado\")",
      "Bash(else echo \"✗ DATABASE_URL (FALTA)\")",
      "Bash(if grep -q \"^NEXTAUTH_SECRET=\" .env)",
      "Bash(then echo \"✓ NEXTAUTH_SECRET configurado\")",
      "Bash(else echo \"✗ NEXTAUTH_SECRET (FALTA)\")",
      "Bash(if grep -q \"^UPSTASH_REDIS_REST_URL=\" .env)",
      "Bash(then echo \"✓ UPSTASH_REDIS_REST_URL configurado\")",
      "Bash(else echo \"✗ UPSTASH_REDIS_REST_URL (FALTA)\")",
      "Bash(if grep -q \"^UPSTASH_REDIS_REST_TOKEN=\" .env)",
      "Bash(then echo \"✓ UPSTASH_REDIS_REST_TOKEN configurado\")",
      "Bash(else echo \"✗ UPSTASH_REDIS_REST_TOKEN (FALTA)\")",
      "Bash(git add:*)",
      "Bash(git rm:*)"
    ],
    "deny": [],
    "ask": []
  }
}
