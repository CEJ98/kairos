// prisma/seed.ts
// Script para poblar la base de datos con datos de prueba

import { PrismaClient } from '@prisma/client'
import { hash } from 'bcryptjs'

const prisma = new PrismaClient()

async function main() {
  console.log('🌱 Seeding database...')

  // Crear usuario de prueba
  const hashedPassword = await hash('password123', 12)

  const user = await prisma.user.upsert({
    where: { email: 'test@kairos.com' },
    update: {},
    create: {
      email: 'test@kairos.com',
      name: 'Test User',
      passwordHash: hashedPassword,
      profile: {
        create: {
          age: 25,
          heightCm: 175,
          weightKg: 75,
          trainingMax: 100,
          progressionRule: 'VOLUME',
        },
      },
    },
  })

  console.log('✅ Usuario creado:', user.email)

  // Crear ejercicios básicos
  const exercises = [
    {
      name: 'Sentadilla',
      description: 'Sentadilla con barra',
      muscleGroup: 'LEGS',
      equipment: 'BARBELL',
      cues: 'Mantén la espalda recta, rodillas alineadas con los pies',
    },
    {
      name: 'Press de Banca',
      description: 'Press de banca con barra',
      muscleGroup: 'CHEST',
      equipment: 'BARBELL',
      cues: 'Escápulas retraídas, baja la barra al pecho',
    },
    {
      name: 'Peso Muerto',
      description: 'Peso muerto convencional',
      muscleGroup: 'BACK',
      equipment: 'BARBELL',
      cues: 'Espalda neutral, caderas atrás, barra cerca del cuerpo',
    },
    {
      name: 'Press Militar',
      description: 'Press militar de pie',
      muscleGroup: 'SHOULDERS',
      equipment: 'BARBELL',
      cues: 'Core activo, empuja la barra en vertical',
    },
  ]

  for (const exercise of exercises) {
    await prisma.exercise.upsert({
      where: { name: exercise.name },
      update: {},
      create: exercise,
    })
  }

  console.log('✅ Ejercicios creados')

  // Crear plan de ejemplo
  const plan = await prisma.plan.create({
    data: {
      userId: user.id,
      name: 'Plan de Fuerza',
      goal: 'STRENGTH',
      microcycleLength: 7,
      mesocycleWeeks: 4,
      progressionRule: 'INTENSITY',
      trainingMax: 100,
      isActive: true,
    },
  })

  console.log('✅ Plan creado:', plan.name)

  // Crear workout de ejemplo
  const tomorrow = new Date()
  tomorrow.setDate(tomorrow.getDate() + 1)

  const workout = await prisma.workout.create({
    data: {
      planId: plan.id,
      userId: user.id,
      title: 'Día de Pierna',
      description: 'Sesión de fuerza para piernas',
      scheduledAt: tomorrow,
      microcycle: 1,
      mesocycle: 1,
      rpeTarget: 8.0,
      restSeconds: 180,
    },
  })

  console.log('✅ Workout creado:', workout.title)

  console.log('🎉 Seeding completado!')
}

main()
  .catch((e) => {
    console.error('❌ Error seeding:', e)
    process.exit(1)
  })
  .finally(async () => {
    await prisma.$disconnect()
  })
